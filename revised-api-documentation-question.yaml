# 1. Asana API documentation [~30min]

# Scenario: Imagine Asana is going to add a new endpoint to its REST API that allows the caller to post a “thanks” to a “user” in the system. Thanks consist of an optional “value” (“purpose”, “mindfulness”, “balance”, “clarity”, “empowerment”, “reality” or “play”) and a required text “message”.

# Exercise: Write the reference documentation for this endpoint, stating any assumptions you made about the structure of the API and what is returned. Include any content you think would be helpful to a reader in understanding why and how to use the new endpoint. Look at our attachments’ reference documentation markdown for an example of our current documentation, considering how your documentation will fit alongside it style-wise.


# Assumptions:

# When making any changes to the API documentation, I would follow the contribution conventions outlined in the Asana API Metadata readme.

# The new 'thanks' endpoint will be a property of the 'tasks' resource. It will also be included in the 'story' resource. 

# In keeping with Asana's value of transparency and mission to help teams work together, thanks posts will be viewable by all users who have access to the task to which the thanks is associated.  

# The following documentation will fit within the 'properties' section of the existing task.yaml markdown: 

  - name: thanked
    <<: *PropType.Bool
    comment: |
      True if the task is thanked by an authorized user, false if not.
 
  - name: thanks
    <<: *PropType.ThanksArray
    access: Read-only
    comment: |
      Array of thanks messages for this task.  

 - name: thanks_message
    <<: *PropType.ThanksMessage
    comment: |
      A thank you message from a user containing an optional Asana value (must be either one of -- 'purpose','mindfulness', 'balance', 'clarity', 'empowerment', 'reality' or 'play') and a required short message. 


# The following documentation will fit within the 'properties' section of the existing story.yaml markdown: 

  - name: thanked
    <<: *PropType.Bool
    comment: |
      True if the story is thanked by an authorized user, false if not.
    notes:
      - |
        This property only exists for stories that provide thanks.

  - name: thanks
    <<: *PropType.ThanksArray
    access: Read-only
    comment: |
      Array of thanks messages for this story.
    notes:
      - |
        This property only exists for stories that provide thanks.  

 - name: thanks_message
    <<: *PropType.ThanksMessage
    comment: |
      A thank you message from a user containing an optional Asana value (must be either one of -- 'purpose','mindfulness', 'balance', 'clarity', 'empowerment', 'reality' or 'play') and a required short message. 
    notes:
      - |
        This property only exists for stories that provide thanks.


# In addition to updating the .yaml reference markdown, I would also document the 'thanks' endpoint in the api reference material.  
# I would update the 'asana.com/developers/api-reference/task' and '/story' pages to include the fields documentation listed below.  
# To minimize repetition for this assignment, I have only included the updated material for the /tasks resource.  
# I would also add the below material to the '/api-reference/story' documentaton with the word 'task' replaced with 'story'.
# In the /story doc, each property would have a note stating: 'This property only exists for stories that provide thanks.'

Field           Description 

thanked         Example: false

                True if the task is thanked by an authorized user, false if not. 


thanks          Example: [ { id: 1234, user: {id: 5678, name: 'Tim Bizarro'}, value: 'balance', message: 'Thank you for...' }, ... ]

                Read-only. Array of thanks messages for this task. 


thanks_message  Example:  { id: 1234, user: {id: 5678, name: 'Mittens'}, value: 'play', message: 'Thank you for...' }

                A thank you message from a user containing an optional Asana value (must be either one of -- 'purpose','mindfulness', 'balance', 'clarity', 'empowerment', 'reality' or 'play') and a required short message. 

              
# Another assumptions is that an existing 'thanks' endpoint can be updated or one can be added by making a PUT request on the URL for that task.  
# The 'thanks_message' parameter can be used to specify the value and message of the thanks.  
# The request would return the complete updated task record.


# Here is an example of a command-line GET request to return the array of 'thanks' for a specific task.  
# Note that this example uses the output expanding option:

# Request
curl -H "Authorization: Bearer <personal_access_token>" \
https://app.asana.com/api/1.0/tasks/1234?opt_expand=thanks

# Response
HTTP/1.1 200
{
  "data": {
    "id": 1234, 
    "thanks": [
    {
      "id": 1235,
      "user": {
         "name": "Mittens",
         "id": 1001 
      },
      "value": "play", 
      "message": "I appreciate your beginner's mindset on this task",  
      "created_at": "2016-06-30T11:30:74.327Z"
    }]
  }
}


# Observation: 
# In doing research for this question, I noticed some repetition in the documentation that may cause confusion.  
# For example, the "CREATE A TASK" section ('asana.com/developers/api-reference/tasks#create') has two identical sets of paragraphs.  
# It might be more clear to show the two endpoint options and remove the duplicate explanation. 


